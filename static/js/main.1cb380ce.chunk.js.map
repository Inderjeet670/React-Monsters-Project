{"version":3,"sources":["components/card/card.component.jsx","components/card-lists/card-list.component.jsx","components/search-box/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","class","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filtered","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAEaA,EAAO,SAACC,GAAD,OACX,sBAAKC,UAAY,iBAAjB,UACE,qBAAKC,IAAG,yCAAoCF,EAAMG,QAAQC,GAAI,GAAKC,IAAI,gBACtE,6BAAKL,EAAMG,QAAQG,OACnB,mBAAGL,UAAY,gBAAf,SAAgCD,EAAMG,QAAQI,YCF7CC,EAAW,SAACR,GAErB,OAAO,sBAAKC,UAAY,YAAjB,cACHD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAAa,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCHhDO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAErB,uBAAOC,MAAQ,SAASC,SAAWF,EAAcG,KAAK,SAASJ,YAAeA,MCmCnEK,G,wDAlCb,aAAc,IAAD,8BACX,gBAcFJ,aAAe,SAACK,GACd,OAAO,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAd5C,EAAKC,MAAQ,CACXd,SAAS,GAETW,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,oBAMzC,WACE,MAAgCC,KAAKN,MAA9Bd,EAAP,EAAOA,SAAUW,EAAjB,EAAiBA,YACXU,EAAWrB,EAASsB,QAAO,SAAC5B,GAChC,OAAOA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAGzD,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIa,MAAQ,QAAZ,sBACA,cAAC,EAAD,CAAWF,YAAc,kBAAkBC,aAAgBgB,KAAKhB,eAChE,cAAC,EAAD,CAAUJ,SAAWqB,W,GA9BXI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1cb380ce.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.styles.css\"\r\nexport const Card = (props)=>\r\n       ( <div className = \"card-container\">\r\n           <img src={`https://robohash.org/Inderjeet/${props.monster.id +1}`} alt=\"Monster-Img\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p className = \"monster-email\">{props.monster.email}</p>\r\n        </div>\r\n        )\r\n\r\n    ","import React from 'react';\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n    \r\n    return <div className = \"card-list\"> {\r\n        props.monsters.map((monster) => <Card key = {monster.id} monster = {monster}/>\r\n        )\r\n      }</div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder,handleChange})=>(\r\n\r\n    <input class = \"search\" onChange ={handleChange} type=\"search\" placeholder = {placeholder}></input>\r\n\r\n)","import React,{Component} from \"react\";\r\nimport {CardList} from \"./components/card-lists/card-list.component.jsx\"\r\nimport {SearchBox} from \"./components/search-box/searchbox.component.jsx\"\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      monsters:[\r\n      ],\r\n      searchField:''\r\n\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters:users}))\r\n  }\r\n\r\n  handleChange = (e)=>{\r\n    return this.setState({searchField: e.target.value})\r\n  }\r\n  render(){\r\n    const {monsters, searchField} = this.state;\r\n    const filtered = monsters.filter((monster) => {\r\n      return monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n    \r\n    return(\r\n      <div className=\"App\">\r\n        <h1 class = \"title\">Monsters</h1>\r\n        <SearchBox placeholder = \"Search monsters\" handleChange = {this.handleChange}/>\r\n        <CardList monsters ={filtered}/>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}